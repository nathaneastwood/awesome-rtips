[
["index.html", "Awesome R Tips! Preface", " Awesome R Tips! 11-Oct-2018 Preface The purpose of this document is to collect together awesome R tips that I have seen on Twitter and elsewhere on the interweb. Sometimes I would see a tip and it may be out of date due to deprecation or it would only have a picture of the code. So this repository provides tests for the tips I have collated. If you see any additional awesome R tips that you think would be a great addition to this document then please feel free to submit a Pull Request. "],
["dplyr.html", "1 dplyr 1.1 case_when() 1.2 mutate_at() 1.3 mutate_if() 1.4 summarise_at()", " 1 dplyr 1.1 case_when() dplyr::case_when goes really well with geom_text (or ggrepel) for when you want to programmatically label a few of the most interesting features in your plots! And the criteria can be as complex as you want. set.seed(10) mydata &lt;- data.frame( x = 1:10, y = rnorm(10), name = c(&quot;Apple&quot;, &quot;Banana&quot;, &quot;Kiwi&quot;, &quot;Orange&quot;, &quot;Watermelon&quot;, &quot;Grapes&quot;, &quot;Pear&quot;, &quot;Cantelope&quot;, &quot;Tomato&quot;, &quot;Satsuma&quot;), stringsAsFactors = FALSE ) %&gt;% mutate( name_poor = case_when( y &lt; 0 ~ name, TRUE ~ &quot;&quot; ) ) ggplot(mydata, aes(x = x, y = y)) + geom_point(size = 5) + geom_text_repel(aes(label = name_poor), point.padding = 2) (#fig:case_when)Selective labelling Credit: @rensa_co 1.2 mutate_at() mutate_at() takes a range of consecutive columns, with var(col1:coln) if you want to batch convert a bunch of columns: iris %&gt;% mutate_at(vars(Sepal.Length:Petal.Width), as.character) %&gt;% as_tibble() ## # A tibble: 150 x 5 ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; ## 1 5.1 3.5 1.4 0.2 setosa ## 2 4.9 3 1.4 0.2 setosa ## 3 4.7 3.2 1.3 0.2 setosa ## 4 4.6 3.1 1.5 0.2 setosa ## 5 5 3.6 1.4 0.2 setosa ## 6 5.4 3.9 1.7 0.4 setosa ## 7 4.6 3.4 1.4 0.3 setosa ## 8 5 3.4 1.5 0.2 setosa ## 9 4.4 2.9 1.4 0.2 setosa ## 10 4.9 3.1 1.5 0.1 setosa ## # ... with 140 more rows Credit: @vsbuffalo 1.3 mutate_if() Convert all factor columns to characters. iris %&gt;% mutate_if(is.factor, as.character) %&gt;% as_tibble() ## # A tibble: 150 x 5 ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 5.1 3.5 1.4 0.2 setosa ## 2 4.9 3 1.4 0.2 setosa ## 3 4.7 3.2 1.3 0.2 setosa ## 4 4.6 3.1 1.5 0.2 setosa ## 5 5 3.6 1.4 0.2 setosa ## 6 5.4 3.9 1.7 0.4 setosa ## 7 4.6 3.4 1.4 0.3 setosa ## 8 5 3.4 1.5 0.2 setosa ## 9 4.4 2.9 1.4 0.2 setosa ## 10 4.9 3.1 1.5 0.1 setosa ## # ... with 140 more rows Credit: @GojThomson 1.4 summarise_at() dplyr::summarise_at() applies multiple summary functions to multiple variables! mtcars %&gt;% group_by(cyl, am) %&gt;% summarize_at(vars(disp, hp, mpg), funs(mean, sd)) ## # A tibble: 6 x 8 ## # Groups: cyl [?] ## cyl am disp_mean hp_mean mpg_mean disp_sd hp_sd mpg_sd ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 4 0 136. 84.7 22.9 14.0 19.7 1.45 ## 2 4 1 93.6 81.9 28.1 20.5 22.7 4.48 ## 3 6 0 205. 115. 19.1 44.7 9.18 1.63 ## 4 6 1 155 132. 20.6 8.66 37.5 0.751 ## 5 8 0 358. 194. 15.0 71.8 33.4 2.77 ## 6 8 1 326 300. 15.4 35.4 50.2 0.566 Credit: @thomas_mock "],
["purrr.html", "2 purrr 2.1 Sample Using a Vector of Sizes 2.2 Read in Multiple csv Files Into a Single data.frame", " 2 purrr 2.1 Sample Using a Vector of Sizes nested_iris &lt;- iris %&gt;% group_by(Species) %&gt;% nest() %&gt;% mutate(n = 2:4) nested_iris %&gt;% mutate(subsamp = map2(data, n, sample_n)) %&gt;% select(Species, subsamp) %&gt;% unnest() ## # A tibble: 9 x 5 ## Species Sepal.Length Sepal.Width Petal.Length Petal.Width ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 setosa 5.4 3.9 1.7 0.4 ## 2 setosa 5.1 3.4 1.5 0.2 ## 3 versicolor 5.8 2.7 4.1 1 ## 4 versicolor 5.7 3 4.2 1.2 ## 5 versicolor 5.9 3 4.2 1.5 ## 6 virginica 6.3 2.7 4.9 1.8 ## 7 virginica 7.2 3.6 6.1 2.5 ## 8 virginica 6.1 3 4.9 1.8 ## 9 virginica 5.6 2.8 4.9 2 Credit: @JennyBryan 2.2 Read in Multiple csv Files Into a Single data.frame fs::dir_ls(data_dir, regexp = &quot;\\\\.csv$&quot;) %&gt;% map_dfr(read_csv) Credit: @grrrck "],
["rmarkdown.html", "3 rmarkdown 3.1 Extract Metadata 3.2 Send Output to the Console 3.3 Specify Reference Placement", " 3 rmarkdown 3.1 Extract Metadata Extract metadata of the current R Markdown document. rmarkdown::metadata$title ## [1] &quot;Awesome R Tips!&quot; Credit: @SteffLocke 3.2 Send Output to the Console On behalf of all of us who despise ‚Äúnotebooks‚Äù: #ty @rstudio pic.twitter.com/osBCL2LN8V ‚Äî hrbr'Challa (@hrbrmstr) February 26, 2017 3.3 Specify Reference Placement #rstats rmarkdown tip: use a div with id=‚Äúrefs‚Äù to tell pandoc where to insert a bibliography pic.twitter.com/t334QAii8N ‚Äî tj mahr üçïüçç (@tjmahr) August 10, 2016 "],
["session-info.html", "4 session_info", " 4 session_info devtools::session_info() ## Session info ------------------------------------------------------------- ## setting value ## version R version 3.5.1 (2017-01-27) ## system x86_64, linux-gnu ## ui X11 ## language (EN) ## collate en_US.UTF-8 ## tz UTC ## date 2018-10-11 ## Packages ----------------------------------------------------------------- ## package * version date source ## assertthat 0.2.0 2017-04-11 CRAN (R 3.5.1) ## backports 1.1.2 2017-12-13 CRAN (R 3.5.1) ## base * 3.5.1 2018-07-26 local ## bindr 0.1.1 2018-03-13 CRAN (R 3.5.1) ## bindrcpp * 0.2.2 2018-03-29 CRAN (R 3.5.1) ## bookdown 0.7 2018-02-18 CRAN (R 3.5.1) ## broom 0.5.0 2018-07-17 CRAN (R 3.5.1) ## cellranger 1.1.0 2016-07-27 CRAN (R 3.5.1) ## cli 1.0.1 2018-09-25 CRAN (R 3.5.1) ## colorspace 1.3-2 2016-12-14 CRAN (R 3.5.1) ## compiler 3.5.1 2018-07-26 local ## crayon 1.3.4 2017-09-16 CRAN (R 3.5.1) ## datasets * 3.5.1 2018-07-26 local ## devtools 1.13.6 2018-06-27 CRAN (R 3.5.1) ## digest 0.6.18 2018-10-10 CRAN (R 3.5.1) ## dplyr * 0.7.6 2018-06-29 CRAN (R 3.5.1) ## evaluate 0.12 2018-10-09 CRAN (R 3.5.1) ## fansi 0.4.0 2018-10-05 CRAN (R 3.5.1) ## forcats * 0.3.0 2018-02-19 CRAN (R 3.5.1) ## ggplot2 * 3.0.0 2018-07-03 CRAN (R 3.5.1) ## ggrepel * 0.8.0 2018-05-09 CRAN (R 3.5.1) ## glue 1.3.0 2018-07-17 CRAN (R 3.5.1) ## graphics * 3.5.1 2018-07-26 local ## grDevices * 3.5.1 2018-07-26 local ## grid 3.5.1 2018-07-26 local ## gtable 0.2.0 2016-02-26 CRAN (R 3.5.1) ## haven 1.1.2 2018-06-27 CRAN (R 3.5.1) ## highr 0.7 2018-06-09 CRAN (R 3.5.1) ## hms 0.4.2 2018-03-10 CRAN (R 3.5.1) ## htmltools 0.3.6 2017-04-28 CRAN (R 3.5.1) ## httr 1.3.1 2017-08-20 CRAN (R 3.5.1) ## jsonlite 1.5 2017-06-01 CRAN (R 3.5.1) ## knitr 1.20 2018-02-20 CRAN (R 3.5.1) ## labeling 0.3 2014-08-23 CRAN (R 3.5.1) ## lattice 0.20-35 2017-03-25 CRAN (R 3.5.1) ## lazyeval 0.2.1 2017-10-29 CRAN (R 3.5.1) ## lubridate 1.7.4 2018-04-11 CRAN (R 3.5.1) ## magrittr 1.5 2014-11-22 CRAN (R 3.5.1) ## memoise 1.1.0 2017-04-21 CRAN (R 3.5.1) ## methods * 3.5.1 2018-07-26 local ## modelr 0.1.2 2018-05-11 CRAN (R 3.5.1) ## munsell 0.5.0 2018-06-12 CRAN (R 3.5.1) ## nlme 3.1-137 2018-04-07 CRAN (R 3.5.1) ## pillar 1.3.0 2018-07-14 CRAN (R 3.5.1) ## pkgconfig 2.0.2 2018-08-16 CRAN (R 3.5.1) ## plyr 1.8.4 2016-06-08 CRAN (R 3.5.1) ## purrr * 0.2.5 2018-05-29 CRAN (R 3.5.1) ## R6 2.3.0 2018-10-04 CRAN (R 3.5.1) ## Rcpp 0.12.19 2018-10-01 CRAN (R 3.5.1) ## readr * 1.1.1 2017-05-16 CRAN (R 3.5.1) ## readxl 1.1.0 2018-04-20 CRAN (R 3.5.1) ## rlang 0.2.2 2018-08-16 CRAN (R 3.5.1) ## rmarkdown 1.10 2018-06-11 CRAN (R 3.5.1) ## rprojroot 1.3-2 2018-01-03 CRAN (R 3.5.1) ## rstudioapi 0.8 2018-10-02 CRAN (R 3.5.1) ## rvest 0.3.2 2016-06-17 CRAN (R 3.5.1) ## scales 1.0.0 2018-08-09 CRAN (R 3.5.1) ## stats * 3.5.1 2018-07-26 local ## stringi 1.2.4 2018-07-20 CRAN (R 3.5.1) ## stringr * 1.3.1 2018-05-10 CRAN (R 3.5.1) ## tibble * 1.4.2 2018-01-22 CRAN (R 3.5.1) ## tidyr * 0.8.1 2018-05-18 CRAN (R 3.5.1) ## tidyselect 0.2.4 2018-02-26 CRAN (R 3.5.1) ## tidyverse * 1.2.1 2017-11-14 CRAN (R 3.5.1) ## tools 3.5.1 2018-07-26 local ## utf8 1.1.4 2018-05-24 CRAN (R 3.5.1) ## utils * 3.5.1 2018-07-26 local ## withr 2.1.2 2018-03-15 CRAN (R 3.5.1) ## xfun 0.3 2018-07-06 CRAN (R 3.5.1) ## xml2 1.2.0 2018-01-24 CRAN (R 3.5.1) ## yaml 2.2.0 2018-07-25 CRAN (R 3.5.1) "]
]
